---
name: Test

on:
  push:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, 3.7, 3.8]
        include:
          - os: macos-10.15
            python-version: 3.9
          - os: macos-latest
            python-version: 3.9
          - name: Windows
            os: windows-latest
            python-version: 3.9

    runs-on: ${{ matrix.os }}
    timeout-minutes: 12
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Qt dependencies
        if: startsWith(matrix.os, 'ubuntu')
        uses: tlambert03/setup-qt-libs@v1

      - name: Install OpenGL drivers
        if: startsWith(matrix.os, 'windows')
        run: >
          curl -Ls
          https://raw.githubusercontent.com/pyvista/gl-ci-helpers/d1b47528134b977456f29ad8ccd70288f4a241e0/appveyor/install_opengl.ps1
          | powershell

      - name: Install
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.SSH }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent)
          ssh-add ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no git@github.com ls || echo ''
          ssh git@github.com || echo ''
          python -m pip install -U toml pip setuptools wheel
          pip install -e .[test]

      # In order for PyQt5 and VTK to run without a screen, we need a fake
      # screen.
      - name: setup virtual screen
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install xvfb
          Xvfb ':42' -screen 0, 1280x720x24 & disown
          echo 'DISPLAY=:42' >> $GITHUB_ENV

      - name: Authenticate tomial_tooth_collection_api
        run: python -m tomial_tooth_collection_api --authenticate
        env:
          TOMIAL_TOOTH_COLLECTION_TOKEN: ${{ secrets.TOMIAL_TOOTH_COLLECTION_TOKEN }}

      - name: Test
        run: pytest --screenshot-on-fail

      # Test PyInstaller.
      - run: pip install pyinstaller
      - working-directory: tests/PyInstaller_
        run: pyinstaller frozen-pytest.spec
      - working-directory: tests/PyInstaller_
        run: ./dist/frozen-pytest/frozen-pytest --screenshot-on-fail ../..

      - name: Test screen sizes
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pkill Xvfb
          xvfb-run -s '-screen 0, 4096x2169x24' pytest --screenshot-on-fail
          xvfb-run -s '-screen 0, 1980x1080x24' pytest --screenshot-on-fail
          xvfb-run -s '-screen 0, 1280x720x24' pytest --screenshot-on-fail
          xvfb-run -s '-screen 0, 640x480x24' pytest --screenshot-on-fail

      - name: Test non-editable install
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          pip uninstall -y tomial_clicky_tooth
          git clean -xfdq
          pip install .
          rm -r tomial_clicky_tooth
          pytest --no-cov --screenshot-on-fail

      - if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }} ${{ matrix.python-version }}
          path: .screenshots
